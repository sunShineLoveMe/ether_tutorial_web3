import { ethers, formatEther } from "ethers";
// Sepolia 测试网
const ALCHEMY_SEPOLIA_URL = process.env.ALCHEMY_SEPOLIA_URL;
const PRIVATE_KEY = process.env.PRIVATE_KEY;
const provider = new ethers.JsonRpcProvider(ALCHEMY_SEPOLIA_URL);
const wallet = new ethers.Wallet(PRIVATE_KEY, provider);

const DeployContractMain = async() => {

    // ERC20的人类可读abi
    const abiERC20 = [
        "constructor(string memory name_, string memory symbol_)",
        "function name() view returns (string)",
        "function symbol() view returns (string)",
        "function totalSupply() view returns (uint256)",
        "function balanceOf(address) view returns (uint)",
        "function transfer(address to, uint256 amount) external returns (bool)",
        "function mint(uint amount) external",
    ];

    const bytecodeERC20 = "60806040526012600560006101000a81548160ff021916908360ff1602179055503480156200002d57600080fd5b506040516200111b3803806200111b8339818101604052810190620000539190620001af565b81600390805190602001906200006b9291906200008d565b508060049080519060200190620000849291906200008d565b50505062000392565b8280546200009b90620002b7565b90600052602060002090601f016020900481019282620000bf57600085556200010b565b82601f10620000da57805160ff19168380011785556200010b565b828001600101855582156200010b579182015b828111156200010a578251825591602001919060010190620000ed565b5b5090506200011a91906200011e565b5090565b5b80821115620001395760008160009055506001016200011f565b5090565b6000620001546200014e846200024b565b62000222565b9050828152602081018484840111156200016d57600080fd5b6200017a84828562000281565b509392505050565b600082601f8301126200019457600080fd5b8151620001a68482602086016200013d565b91505092915050565b60008060408385031215620001c357600080fd5b600083015167ffffffffffffffff811115620001de57600080fd5b620001ec8582860162000182565b925050602083015167ffffffffffffffff8111156200020a57600080fd5b620002188582860162000182565b9150509250929050565b60006200022e62000241565b90506200023c8282620002ed565b919050565b6000604051905090565b600067ffffffffffffffff82111562000269576200026862000352565b5b620002748262000381565b9050602081019050919050565b60005b83811015620002a157808201518184015260208101905062000284565b83811115620002b1576000848401525b50505050565b60006002820490506001821680620002d057607f821691505b60208210811415620002e757620002e662000323565b5b50919050565b620002f88262000381565b810181811067ffffffffffffffff821117156200031a576200031962000352565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610d7980620003a26000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806342966c681161007157806342966c681461016857806370a082311461018457806395d89b41146101b4578063a0712d68146101d2578063a9059cbb146101ee578063dd62ed3e1461021e576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b661024e565b6040516100c39190610aee565b60405180910390f35b6100e660048036038101906100e19190610a08565b6102dc565b6040516100f39190610ad3565b60405180910390f35b6101046103ce565b6040516101119190610b10565b60405180910390f35b610134600480360381019061012f91906109b9565b6103d4565b6040516101419190610ad3565b60405180910390f35b610152610583565b60405161015f9190610b2b565b60405180910390f35b610182600480360381019061017d9190610a44565b610596565b005b61019e60048036038101906101999190610954565b61066d565b6040516101ab9190610b10565b60405180910390f35b6101bc610685565b6040516101c99190610aee565b60405180910390f35b6101ec60048036038101906101e79190610a44565b610713565b005b61020860048036038101906102039190610a08565b6107ea565b6040516102159190610ad3565b60405180910390f35b6102386004803603810190610233919061097d565b610905565b6040516102459190610b10565b60405180910390f35b6003805461025b90610c74565b80601f016020809104026020016040519081016040528092919081815260200182805461028790610c74565b80156102d45780601f106102a9576101008083540402835291602001916102d4565b820191906000526020600020905b8154815290600101906020018083116102b757829003601f168201915b505050505081565b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103bc9190610b10565b60405180910390a36001905092915050565b60025481565b600081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104629190610bb8565b92505081905550816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104b79190610bb8565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461050c9190610b62565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105709190610b10565b60405180910390a3600190509392505050565b600560009054906101000a900460ff1681565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105e49190610bb8565b9250508190555080600260008282546105fd9190610bb8565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106629190610b10565b60405180910390a350565b60006020528060005260406000206000915090505481565b6004805461069290610c74565b80601f01602080910402602001604051908101604052809291908181526020018280546106be90610c74565b801561070b5780601f106106e05761010080835404028352916020019161070b565b820191906000526020600020905b8154815290600101906020018083116106ee57829003601f168201915b505050505081565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107619190610b62565b92505081905550806002600082825461077a9190610b62565b925050819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107df9190610b10565b60405180910390a350565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461083a9190610bb8565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461088f9190610b62565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108f39190610b10565b60405180910390a36001905092915050565b6001602052816000526040600020602052806000526040600020600091509150505481565b60008135905061093981610d15565b92915050565b60008135905061094e81610d2c565b92915050565b60006020828403121561096657600080fd5b60006109748482850161092a565b91505092915050565b6000806040838503121561099057600080fd5b600061099e8582860161092a565b92505060206109af8582860161092a565b9150509250929050565b6000806000606084860312156109ce57600080fd5b60006109dc8682870161092a565b93505060206109ed8682870161092a565b92505060406109fe8682870161093f565b9150509250925092565b60008060408385031215610a1b57600080fd5b6000610a298582860161092a565b9250506020610a3a8582860161093f565b9150509250929050565b600060208284031215610a5657600080fd5b6000610a648482850161093f565b91505092915050565b610a7681610bfe565b82525050565b6000610a8782610b46565b610a918185610b51565b9350610aa1818560208601610c41565b610aaa81610d04565b840191505092915050565b610abe81610c2a565b82525050565b610acd81610c34565b82525050565b6000602082019050610ae86000830184610a6d565b92915050565b60006020820190508181036000830152610b088184610a7c565b905092915050565b6000602082019050610b256000830184610ab5565b92915050565b6000602082019050610b406000830184610ac4565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610b6d82610c2a565b9150610b7883610c2a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bad57610bac610ca6565b5b828201905092915050565b6000610bc382610c2a565b9150610bce83610c2a565b925082821015610be157610be0610ca6565b5b828203905092915050565b6000610bf782610c0a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610c5f578082015181840152602081019050610c44565b83811115610c6e576000848401525b50505050565b60006002820490506001821680610c8c57607f821691505b60208210811415610ca057610c9f610cd5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b610d1e81610bec565b8114610d2957600080fd5b50565b610d3581610c2a565b8114610d4057600080fd5b5056fea2646970667358221220b81b9c338686d8005107f37c19d8556255d9124773cccbe048f0e69356aa954664736f6c63430008040033"

    // const factoryERC20 = new ethers.ContractFactory(abiERC20, bytecodeERC20, wallet);

    // 1. 利用contractFactory部署ERC20代币合约
    // console.log("\n1. 利用contractFactory部署ERC20代币合约")
    // 部署合约，填入构造器参数
    // const contractERC20 = await factoryERC20.deploy("WTF Token", "WTF");
    // console.log(`合约地址：${contractERC20.target}`)
    // console.log("部署合约的交易详情")
    // console.log(contractERC20.deploymentTransaction())
    // console.log("\n等待合约部署上链")
    // await contractERC20.waitForDeployment()
    // console.log("合约已上链")
    // 合约地址： 0x77ea50117185D00E7021BB0cdBeC6908cF4c2C39
    const contractAddress = "0x77ea50117185D00E7021BB0cdBeC6908cF4c2C39"
    const contractERC20 = new ethers.Contract(contractAddress, abiERC20, wallet);
    console.log(`合约名称: ${await contractERC20.name()}`)
    console.log(`合约代号: ${await contractERC20.symbol()}`)

    console.log("\n2. 调用mint()函数，给自己地址mint 10,000代币")
    let tx = await contractERC20.mint("10000");
    console.log("等待交易上链")
    await tx.wait();
    console.log(`mint后地址中代币余额: ${await contractERC20.balanceOf(wallet)}`)
    console.log(`mint后合约总供给: ${await contractERC20.totalSupply()}`)

}

export {
    DeployContractMain
}

